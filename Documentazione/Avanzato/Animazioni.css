/*@keyframes
animation-name
animation-duration
animation-delay
animation-iteration-count
animation-direction
animation-timing-function
animation-fill-mode
animation

Cosa sono le animazioni CSS?
Un'animazione consente a un elemento di passare gradualmente da uno stile all'altro.

Puoi modificare tutte le proprietà CSS che vuoi, tutte le volte che vuoi.

Per utilizzare l'animazione CSS, è necessario innanzitutto specificare 
alcuni fotogrammi chiave per l'animazione.

I fotogrammi chiave contengono gli stili che l'elemento avrà in determinati momenti.

La regola @keyframes
Quando si specificano stili CSS all'interno della @keyframes regola, 
l'animazione cambierà gradualmente dallo stile corrente al nuovo stile in determinati momenti.
Per far funzionare un'animazione, è necessario associarla a un elemento.*/

@keyframes example {
    from {background-color: red;}
    to {background-color: yellow;}
  }
  @keyframes prova {
    0% {
      background-color: red;
    }
    25% {
      background-color: yellow;
    }
    50% {
      background-color: blue;
    }
    100% {
      background-color: green;
    }
  }
  

  div {
    width: 100px;
    height: 100px;
    background-color: red;
    animation-name: example;
    animation-duration: 4s;
  }
/*Nota: la animation-duration proprietà definisce quanto tempo deve impiegare un'animazione per completarsi.
 Se la animation-duration proprietà non è specificata, non si verificherà alcuna animazione, 
 perché il valore predefinito è 0s (0 secondi). 
 
 Ritardare un'animazione
La animation-delay proprietà specifica un ritardo per l'inizio di un'animazione.*/
div {
    width: 100px;
    height: 100px;
    position: relative;
    background-color: red;
    animation-name: example;
    animation-duration: 4s;
    animation-delay: 2s;
  }

/*Imposta il numero di volte in cui un'animazione deve essere eseguita
La animation-iteration-countproprietà 
specifica il numero di volte in cui deve essere eseguita un'animazione.*/
div {
    width: 100px;
    height: 100px;
    position: relative;
    background-color: red;
    animation-name: example;
    animation-duration: 4s;
    animation-iteration-count: 3;
  }
/*Esegui l'animazione in direzione inversa o cicli alternati
La animation-direction proprietà specifica se un'animazione deve essere riprodotta in avanti, 
indietro o in cicli alternati.
La proprietà animation-direction può avere i seguenti valori:
normal- L'animazione viene riprodotta normalmente (in avanti). Questa è l'impostazione predefinita
reverse- L'animazione viene riprodotta in direzione inversa (all'indietro)
alternate - L'animazione viene riprodotta prima in avanti, poi all'indietro
alternate-reverse- L'animazione viene riprodotta prima all'indietro, poi in avanti*/  
div {
    width: 100px;
    height: 100px;
    position: relative;
    background-color: red;
    animation-name: example;
    animation-duration: 4s;
    animation-direction: reverse;
  }
  div {
    width: 100px;
    height: 100px;
    position: relative;
    background-color: red;
    animation-name: example;
    animation-duration: 4s;
    animation-iteration-count: 2;
    animation-direction: alternate;
  }

  div {
    width: 100px;
    height: 100px;
    position: relative;
    background-color: red;
    animation-name: example;
    animation-duration: 4s;
    animation-iteration-count: 2;
    animation-direction: alternate-reverse;
  }
/*Specificare la curva di velocità dell'animazione
La animation-timing-function proprietà specifica la curva di velocità dell'animazione.

La proprietà animation-timing-function può avere i seguenti valori:

ease- Specifica un'animazione con un inizio lento, poi veloce, quindi termina lentamente 
(impostazione predefinita)
linear- Specifica un'animazione con la stessa velocità dall'inizio alla fine
ease-in- Specifica un'animazione con un inizio lento
ease-out- Specifica un'animazione con una fine lenta
ease-in-out- Specifica un'animazione con inizio e fine lenti
cubic-bezier(n,n,n,n)- Consente di definire i propri valori in una funzione cubica-bezier*/
#div1 {animation-timing-function: linear;}
#div2 {animation-timing-function: ease;}
#div3 {animation-timing-function: ease-in;}
#div4 {animation-timing-function: ease-out;}
#div5 {animation-timing-function: ease-in-out;}

/*Specificare la modalità di riempimento per un'animazione
La animation-fill-mode proprietà specifica uno stile per l'elemento
di destinazione quando l'animazione non è in riproduzione
La proprietà animation-fill-mode può avere i seguenti valori:
none- Valore predefinito. 
L'animazione non applicherà alcuno stile all'elemento prima o dopo la sua esecuzione
forwards- L'elemento manterrà i valori di stile impostati dall'ultimo fotogramma chiave 
(dipende dalla direzione dell'animazione e dal conteggio delle iterazioni dell'animazione)
backwards- L'elemento otterrà i valori di stile impostati dal primo fotogramma chiave 
(dipende dalla direzione dell'animazione) e li manterrà durante il periodo di ritardo dell'animazione
both- L'animazione seguirà le regole sia in avanti che all'indietro, 
estendendo le proprietà dell'animazione in entrambe le direzioni*/
div {
    width: 100px;
    height: 100px;
    background: red;
    position: relative;
    animation-name: example;
    animation-duration: 3s;
    animation-fill-mode: forwards;
  }
/*Proprietà abbreviata dell'animazione*/
div {
    animation-name: example;
    animation-duration: 5s;
    animation-timing-function: linear;
    animation-delay: 2s;
    animation-iteration-count: infinite;
    animation-direction: alternate;
  }

/*Specificare numero di Animazioni
La proprietà animation-iteration-count specifica quante volte un’animazione deve essere eseguita.*/
div {
  width: 100px;
  height: 100px;
  position: relative;
  background-color: red;
  animation-name: prova;
  animation-duration: 4s;
  animation-iteration-count: 3;
}

/*Animazione Inversa e Cicli Alternati
La proprietà animation-direction specifica se un’animazione deve essere 
riprodotta in avanti, all’indietro o in cicli alternati.
La proprietà animation-direction può avere i seguenti valori:

normal - L’animazione viene riprodotta normalmente (in avanti). Questo è il valore predefinito.
reverse - L’animazione viene riprodotta all’indietro.
alternate - L’animazione viene riprodotta prima in avanti, quindi all’indietro.
alternate-reverse - L’animazione viene riprodotta prima all’indietro, quindi in avanti.*/

/*L’esempio seguente eseguirà l’animazione in direzione inversa:*/
div {
  width: 100px;
  height: 100px;
  position: relative;
  background-color: red;
  animation-name: prova;
  animation-duration: 4s;
  animation-direction: reverse;
}
/*L’esempio seguente utilizza il valore “alternate” per far eseguire l’animazione prima in avanti, 
poi all’indietro:*/
div {
  width: 100px;
  height: 100px;
  position: relative;
  background-color: red;
  animation-name: prova;
  animation-duration: 4s;
  animation-iteration-count: 2;
  animation-direction: alternate;
}

/*L’esempio seguente utilizza il valore “alternate-reverse” per far eseguire 
l’animazione prima all’indietro, poi in avanti:*/
div {
  width: 100px;
  height: 100px;
  position: relative;
  background-color: red;
  animation-name: prova;
  animation-duration: 4s;
  animation-iteration-count: 2;
  animation-direction: alternate-reverse;
}

/*Specifica il fill-mode Per un’Animazione
Le animazioni CSS non influenzano un elemento prima che venga riprodotto 
il primo keyframe o dopo che viene riprodotto l’ultimo keyframe. 
La proprietà animation-fill-mode può sovrascrivere questo comportamento.
La proprietà animation-fill-mode specifica uno stile per l’elemento di destinazione 
quando l’animazione non è in riproduzione (prima che inizi, dopo che termina o entrambi).
La proprietà animation-fill-mode può avere i seguenti valori
none - Valore predefinito. L’animazione non applica alcuno stile all’elemento prima o dopo che viene eseguita.
forwards - L’elemento manterrà i valori degli stili impostati dall’ultimo keyframe
 (dipende da animation-direction e animation-iteration-count).
backwards - L’elemento acquisirà i valori degli stili impostati dal primo keyframe 
(dipende da animation-direction) e li manterrà durante il periodo di animation-delay.
both - L’animazione seguirà le regole sia per forwards che per backwards, 
estendendo le proprietà dell’animazione in entrambe le direzioni.*/
div {
  width: 100px;
  height: 100px;
  background: red;
  position: relative;
  animation-name: prova;
  animation-duration: 3s;
  animation-fill-mode: forwards;
}

/*Proprietà Animazione Shorthand*/
div {
  animation-name: prova;
  animation-duration: 5s;
  animation-timing-function: linear;
  animation-delay: 2s;
  animation-iteration-count: infinite;
  animation-direction: alternate;
}

div {
  animation: prova 5s linear 2s infinite alternate;
}

