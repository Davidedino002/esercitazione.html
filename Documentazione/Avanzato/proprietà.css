/*Regola CSS @property
La @property regola viene utilizzata per definire proprietà 
CSS personalizzate direttamente nel foglio di stile,
La @property regola prevede il controllo e la limitazione del tipo di dati,
 imposta valori predefiniti e definisce se la proprietà può ereditare valori oppure no.
 I vantaggi dell'utilizzo @property di:

Controllo del tipo: è necessario specificare il tipo di dati della proprietà personalizzata, 
ad esempio <numero>, <colore>, <lunghezza>, ecc. 
Ciò impedisce errori e garantisce che le proprietà personalizzate vengano utilizzate correttamente
Imposta valore predefinito: imposti un valore predefinito per la proprietà personalizzata. 
Ciò garantisce che se in seguito viene assegnato un valore non valido,
 il browser utilizzi il valore di fallback definito
Imposta comportamento di ereditarietà: devi specificare se la proprietà 
personalizzata può ereditare valori dai suoi elementi padre o meno*/


@property --my-bg-color {
  syntax: "<color>";
  inherits: true;
  initial-value: lightgray;
}

@property --my-txt-color {
  syntax: "<color>";
  inherits: true;
  initial-value: darkblue;
}

div {
  width: 300px;
  height: 150px;
  padding: 15px;
  background-color: var(--my-bg-color);
  color: var(--my-txt-color);
}


/*Utilizzo del valore ereditato
Nell'esempio seguente imposteremo il valore inherits su false. 
Ciò significa che la proprietà personalizzata NON erediterà i valori dai suoi elementi padre.*/
@property --my-bg-color {
    syntax: "<color>";
    inherits: false;
    initial-value: lightgray;
  }
  
/*Crea un'animazione fluida con @property
Un'opportunità completamente nuova che puoi ottenere con la 
@property regola è quella di animare qualcosa che prima non poteva essere animato*/
@property --startColor {
    syntax: "<color>";
    initial-value: #EADEDB;
    inherits: false;
  }
  
  @property --endColor {
    syntax: "<color>";
    initial-value: #BC70A4;
    inherits: false;
  }



/*Dimensionamento della casella CSS
La box-sizing proprietà CSS consente di includere la spaziatura 
e il bordo nella larghezza e nell'altezza totali di un elemento.*/
.div1 {
    width: 300px;
    height: 100px;
    border: 1px solid blue;
  }
  
  .div2 {
    width: 300px;
    height: 100px;
    padding: 50px;
    border: 1px solid red;
  }

/*Con la proprietà CSS box-sizing
La box-sizingproprietà consente di includere la spaziatura 
e il bordo nella larghezza e nell'altezza totali di un elemento.
Se imposti box-sizing: border-box*/
.div1 {
    width: 300px;
    height: 100px;
    border: 1px solid blue;
    box-sizing: border-box;
  }
  
  .div2 {
    width: 300px;
    height: 100px;
    padding: 50px;
    border: 1px solid red;
    box-sizing: border-box;
  }

/*Poiché il risultato ottenuto utilizzando box-sizing: border-box;
è decisamente migliore, molti sviluppatori desiderano che tutti gli elementi 
delle loro pagine funzionino in questo modo.*/

* {
    box-sizing: border-box;
  }
  
/*Media Queries*/
/* Set the background color of body to tan */
body {
    background-color: tan;
  }
  
  /* On screens that are 992px or less, set the background color to blue */
  @media screen and (max-width: 992px) {
    body {
      background-color: blue;
    }
  }
  
  /* On screens that are 600px or less, set the background color to olive */
  @media screen and (max-width: 600px) {
    body {
      background-color: olive;
    }
  }

/*Query dei media per i menu*/
/* The navbar container */
.topnav {
    overflow: hidden;
    background-color: #333;
  }
  
  /* Navbar links */
  .topnav a {
    float: left;
    display: block;
    color: white;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
  }
  
  /* On screens that are 600px wide or less, make the menu links stack on top of each other instead of next to each other */
  @media screen and (max-width: 600px) {
    .topnav a {
      float: none;
      width: 100%;
    }
  }

/*Query sui media per le colonne*/
/* Create four equal columns that floats next to each other */
.column {
    float: left;
    width: 25%;
  }
  
  /* On screens that are 992px wide or less, go from four columns to two columns */
  @media screen and (max-width: 992px) {
    .column {
      width: 50%;
    }
  }
  
  /* On screens that are 600px wide or less, make the columns stack on top of each other instead of next to each other */
  @media screen and (max-width: 600px) {
    .column {
      width: 100%;
    }
  }

/*Nascondi elementi con query multimediali*/
/* If the screen size is 600px wide or less, hide the element */
@media screen and (max-width: 600px) {
    div.example {
      display: none;
    }
  }

/*Cambiare la dimensione del carattere con le query multimediali*/
/* If screen size is more than 600px wide, set the font-size of <div> to 80px */
@media screen and (min-width: 600px) {
    div.example {
      font-size: 80px;
    }
  }
  
  /* If screen size is 600px wide, or less, set the font-size of <div> to 30px */
  @media screen and (max-width: 600px) {
    div.example {
      font-size: 30px;
    }
  }
  
/*Orientamento: Ritratto / Paesaggio
Le query multimediali possono essere utilizzate anche per modificare 
il layout di una pagina in base all'orientamento del browser.*/

@media only screen and (orientation: landscape) {
    body {
      background-color: lightblue;
    }
  }

/*Larghezza minima a larghezza massima*/
@media screen and (max-width: 900px) and (min-width: 600px) {
    div.example {
      font-size: 50px;
      padding: 50px;
      border: 8px solid black;
      background: yellow;
    }
  }
  