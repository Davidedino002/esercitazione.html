/*Il design fluido (o fluid design) è un approccio al design web che consente ai layout 
di adattarsi dinamicamente alle dimensioni dello schermo, 
utilizzando unità di misura relative anziché fisse. 
Questo tipo di design è fondamentale per garantire che le tue pagine web siano accessibili 
e utilizzabili su una vasta gamma di dispositivi, da piccoli smartphone a grandi monitor desktop. 
In questa guida, esploreremo come implementare il design fluido in CSS, 
con esempi pratici e best practices per ottimizzare l’esperienza utente.

1. Cos’è il Design Fluido?
Il design fluido si basa sull’uso di unità di misura relative, come percentuali (%), 
unità di viewport (vw, vh), em, e rem, per definire larghezze, altezze, padding, margini, e font-size. 
A differenza del design fisso, che utilizza pixel (px) per definire dimensioni precise, 
il design fluido permette agli elementi di ridimensionarsi 
proporzionalmente al contenitore o alla finestra del browser.

1.1. Vantaggi del Design Fluido
Adattabilità: Il layout si adatta automaticamente a diverse dimensioni dello schermo, 
migliorando l’esperienza utente su dispositivi mobili e desktop.
Manutenzione: Riduce la necessità di breakpoints specifici per diverse risoluzioni, 
semplificando la gestione del codice CSS.
Future-proofing: Poiché le dimensioni non sono rigide,
 i layout fluido sono più resistenti ai cambiamenti nelle dimensioni 
 dello schermo o nelle risoluzioni dei dispositivi futuri.
 
 2. Esempi di Implementazione del Design Fluido
 2.1. Larghezze e Altezze Fluide con Percentuali
 Le percentuali sono una delle unità di misura più utilizzate nel design fluido.
  Consentono di definire larghezze e altezze in base alla dimensione del contenitore principale.*/
  .container {
    width: 80%; /* Il contenitore occupa l'80% della larghezza del body */
    margin: 0 auto;
  }
  
  .fluid-box {
    width: 50%; /* Il box occupa il 50% della larghezza del contenitore */
    padding: 2%;
    background-color: #4caf50;
  }


/*In questo esempio, .container occupa l’80% della larghezza del corpo della pagina,
mentre .fluid-box occupa il 50% della larghezza del contenitore, 
adattandosi alla dimensione del viewport.

2.2. Utilizzo delle Unità di Viewport
Le unità di viewport (vw, vh) permettono di impostare dimensioni 
relative alla larghezza (vw) e all’altezza (vh) del viewport.*/
.header {
    height: 20vh; /* L'altezza del header è il 20% dell'altezza del viewport */
    width: 100vw; /* La larghezza del header è il 100% della larghezza del viewport */
    background-color: #2196f3;
  }

/*2.3. Tipografia Fluida con em e rem
Le unità em e rem consentono di creare tipografie fluide 
che si adattano in base alle dimensioni del font principale del documento o del contenitore.*/  
body {
    font-size: 16px; /* Dimensione di base del font */
  }
  
  h1 {
    font-size: 2.5rem; /* 2.5 volte la dimensione del font base */
  }
  
  p {
    font-size: 1em; /* Stessa dimensione del font base */
  }
  
  .container {
    font-size: 1.2em; /* Il testo all'interno della .container sarà il 20% più grande */
  }

/*2.4. Griglie Fluide
Le griglie fluide possono essere create utilizzando percentuali per definire le larghezze delle colonne, 
garantendo che il layout si ridimensioni correttamente.*/
.grid-container {
    display: flex;
    gap: 2%;
  }
  
  .grid-item {
    width: 32%; /* Tre colonne fluide con un gap del 2% tra di loro */
    background-color: #ff5722;
    padding: 10px;
    text-align: center;
  }


/*3. Best Practices per il Design Fluido
3.1. Combinazione con Media Query
Anche se il design fluido riduce la necessità di molti breakpoints, 
può essere utile combinare unità fluide con media query 
per gestire layout complessi o casi specifici.*/  
@media (min-width: 1024px) {
    .container {
      max-width: 960px; /* Limita la larghezza massima del contenitore sui desktop */
    }
  }

/*3.2. Testare su Diversi Dispositivi
Assicurati di testare i tuoi layout fluidi su una vasta gamma di dispositivi 
e risoluzioni per garantire che il design si comporti come previsto in tutti i contesti.*/

/*3.3. Evitare Unità Fisse
Evita l’uso eccessivo di unità fisse come px per larghezze, altezze, padding e margini, 
poiché possono compromettere la fluidità 
del layout. Usa percentuali, vw, vh, em, e rem per mantenere la flessibilità.*/